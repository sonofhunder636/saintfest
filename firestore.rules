rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Define admin email whitelist
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'andrewfisher1024@gmail.com';
    }

    // User documents - only admin can read/write
    match /users/{userId} {
      allow read, write: if isAdmin();
    }

    // Saints - public read, admin write
    match /saints/{saintId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Tournaments - public read, admin write
    match /tournaments/{tournamentId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Brackets - public read, admin write
    match /brackets/{bracketId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Categories - public read, admin write
    match /categories/{categoryId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Posts collection - authenticated users can manage all posts, public can read published posts
    match /posts/{postId} {
      allow read: if resource.data.status == 'published'; // Public can read published posts
      allow read, write, create, delete: if request.auth != null; // Authenticated users can manage all posts
    }

    // Blog posts collection - admins can manage all posts, public can read published posts
    match /blogPosts/{postId} {
      allow read: if resource.data.status == 'published'; // Public can read published posts
      allow read, write, create, delete: if isAdmin(); // Admins can manage all posts
    }

    // Daily posts collection - admins can manage all posts, public can read published posts
    match /dailyPosts/{postId} {
      allow read: if resource.data.isPublished == true; // Public can read published posts
      allow read, write, create, delete: if isAdmin(); // Admins can manage all posts
    }

    // Voting sessions collection - for voting system
    match /votingSessions/{sessionId} {
      allow read: if true; // Anyone can read voting sessions
      allow write, create, delete: if isAdmin();
    }

    // Polls - public read, admin write
    match /polls/{pollId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Votes - public read (for results), admin write
    match /votes/{voteId} {
      allow read: if true;  // Public read access for voting results
      allow write: if isAdmin();
    }

    // Published brackets - public read, admin write
    match /publishedBrackets/{bracketId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Tournament archives - public read, admin write
    match /tournamentArchives/{archiveId} {
      allow read: if true;  // Public read access for all visitors
      allow write: if isAdmin();
    }

    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}